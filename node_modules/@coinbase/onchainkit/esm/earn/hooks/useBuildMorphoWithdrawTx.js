import { useMorphoVault } from './useMorphoVault.js';
import { buildWithdrawFromMorphoTx } from '../utils/buildWithdrawFromMorphoTx.js';
import { parseUnits } from 'viem';

/**
 * Generates Call[] for a Morpho withdraw transaction
 * to be used with <Transaction />
 */
function useBuildMorphoWithdrawTx({
  vaultAddress,
  amount,
  receiverAddress
}) {
  const _useMorphoVault = useMorphoVault({
      vaultAddress,
      address: receiverAddress
    }),
    asset = _useMorphoVault.asset,
    balance = _useMorphoVault.balance,
    assetDecimals = _useMorphoVault.assetDecimals,
    vaultDecimals = _useMorphoVault.vaultDecimals;
  const amountIsGreaterThanBalance = amount > Number(balance);
  if (!asset || balance === undefined || !assetDecimals || !vaultDecimals || amountIsGreaterThanBalance) {
    return {
      calls: []
    };
  }
  const parsedAmount = parseUnits(amount.toString(), assetDecimals);
  const calls = buildWithdrawFromMorphoTx({
    receiverAddress,
    vaultAddress,
    amount: parsedAmount
  });
  return {
    calls
  };
}
export { useBuildMorphoWithdrawTx };
//# sourceMappingURL=useBuildMorphoWithdrawTx.js.map
