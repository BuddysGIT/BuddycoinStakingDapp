import { base } from 'viem/chains';
const QUERY = `query($address: String!) {
    vaultByAddress(address: $address, chainId: ${base.id} ) {
        address
        symbol
        name
        creationBlockNumber
        creationTimestamp
        creatorAddress
        whitelisted
        asset {
          id
          address
          decimals
        }
        chain {
          id
          network
        }
        state {
          id
          apy
          netApy
          netApyWithoutRewards
          totalAssets
          totalAssetsUsd
          fee
          timelock
          rewards {
            amountPerSuppliedToken
            supplyApr
            yearlySupplyTokens
            asset {
              address
              name
              decimals
            }
          }
        }
    }
  }`;
async function fetchMorphoApy(vaultAddress) {
  const response = await fetch('https://blue-api.morpho.org/graphql', {
    method: 'POST',
    headers: {
      'Content-Type': 'application/json'
    },
    body: JSON.stringify({
      query: QUERY,
      variables: {
        address: vaultAddress
      }
    })
  });
  const _await$response$json = await response.json(),
    data = _await$response$json.data;
  return data.vaultByAddress;
}
export { fetchMorphoApy };
//# sourceMappingURL=fetchMorphoApy.js.map
