import '../../api/index.js';
import { isApiError } from '../utils/isApiResponseError.js';
import { usdcToken } from '../../token/constants.js';
import { getSwapQuote } from '../../api/getSwapQuote.js';
async function useExchangeRate({
  token,
  selectedInputType,
  setExchangeRate,
  setExchangeRateLoading
}) {
  if (!token) {
    return;
  }
  if (token.address === usdcToken.address) {
    setExchangeRate(1);
    return;
  }
  setExchangeRateLoading?.(true);
  const fromToken = selectedInputType === 'crypto' ? token : usdcToken;
  const toToken = selectedInputType === 'crypto' ? usdcToken : token;
  try {
    const response = await getSwapQuote({
      amount: '1',
      // hardcoded amount of 1 because we only need the exchange rate
      from: fromToken,
      to: toToken,
      useAggregator: false
    });
    if (isApiError(response)) {
      console.error('Error fetching exchange rate:', response.error);
      return;
    }
    const rate = selectedInputType === 'crypto' ? 1 / Number(response.fromAmountUSD) : Number(response.toAmount) / 10 ** response.to.decimals;
    setExchangeRate(rate);
  } catch (error) {
    console.error('Uncaught error fetching exchange rate:', error);
  } finally {
    setExchangeRateLoading?.(false);
  }
}
export { useExchangeRate };
//# sourceMappingURL=useExchangeRate.js.map
